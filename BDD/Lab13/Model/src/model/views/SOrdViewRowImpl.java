package model.views;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 18 12:37:45 EST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SOrdViewRowImpl
  extends ViewRowImpl
{


  public static final int ENTITY_SORD = 0;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum
  {
    Id
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getId();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setId((Integer)value);
      }
    }
    ,
    CustomerId
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getCustomerId();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setCustomerId((Integer)value);
      }
    }
    ,
    DateOrdered
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getDateOrdered();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setDateOrdered((Timestamp)value);
      }
    }
    ,
    DateShipped
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getDateShipped();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setDateShipped((Timestamp)value);
      }
    }
    ,
    SalesRepId
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getSalesRepId();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setSalesRepId((Integer)value);
      }
    }
    ,
    Total
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getTotal();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setTotal((BigDecimal)value);
      }
    }
    ,
    PaymentType
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getPaymentType();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setPaymentType((String)value);
      }
    }
    ,
    OrderFilled
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getOrderFilled();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setOrderFilled((String)value);
      }
    }
    ,
    SEmpView
    {
      public Object get(SOrdViewRowImpl obj)
      {
        return obj.getSEmpView();
      }

      public void put(SOrdViewRowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(SOrdViewRowImpl object);

    public abstract void put(SOrdViewRowImpl object, Object value);

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int ID = AttributesEnum.Id.index();
  public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
  public static final int DATEORDERED = AttributesEnum.DateOrdered.index();
  public static final int DATESHIPPED = AttributesEnum.DateShipped.index();
  public static final int SALESREPID = AttributesEnum.SalesRepId.index();
  public static final int TOTAL = AttributesEnum.Total.index();
  public static final int PAYMENTTYPE = AttributesEnum.PaymentType.index();
  public static final int ORDERFILLED = AttributesEnum.OrderFilled.index();
  public static final int SEMPVIEW = AttributesEnum.SEmpView.index();

  /**
   * This is the default constructor (do not remove).
   */
  public SOrdViewRowImpl()
  {
  }

  /**
   * Gets SOrd entity object.
   * @return the SOrd
   */
  public EntityImpl getSOrd()
  {
    return (EntityImpl) getEntity(ENTITY_SORD);
  }

  /**
   * Gets the attribute value for ID using the alias name Id.
   * @return the ID
   */
  public Integer getId()
  {
    return (Integer) getAttributeInternal(ID);
  }

  /**
   * Sets <code>value</code> as attribute value for ID using the alias name Id.
   * @param value value to set the ID
   */
  public void setId(Integer value)
  {
    setAttributeInternal(ID, value);
  }

  /**
   * Gets the attribute value for CUSTOMER_ID using the alias name CustomerId.
   * @return the CUSTOMER_ID
   */
  public Integer getCustomerId()
  {
    return (Integer) getAttributeInternal(CUSTOMERID);
  }

  /**
   * Sets <code>value</code> as attribute value for CUSTOMER_ID using the alias name CustomerId.
   * @param value value to set the CUSTOMER_ID
   */
  public void setCustomerId(Integer value)
  {
    setAttributeInternal(CUSTOMERID, value);
  }

  /**
   * Gets the attribute value for DATE_ORDERED using the alias name DateOrdered.
   * @return the DATE_ORDERED
   */
  public Timestamp getDateOrdered()
  {
    return (Timestamp) getAttributeInternal(DATEORDERED);
  }

  /**
   * Sets <code>value</code> as attribute value for DATE_ORDERED using the alias name DateOrdered.
   * @param value value to set the DATE_ORDERED
   */
  public void setDateOrdered(Timestamp value)
  {
    setAttributeInternal(DATEORDERED, value);
  }

  /**
   * Gets the attribute value for DATE_SHIPPED using the alias name DateShipped.
   * @return the DATE_SHIPPED
   */
  public Timestamp getDateShipped()
  {
    return (Timestamp) getAttributeInternal(DATESHIPPED);
  }

  /**
   * Sets <code>value</code> as attribute value for DATE_SHIPPED using the alias name DateShipped.
   * @param value value to set the DATE_SHIPPED
   */
  public void setDateShipped(Timestamp value)
  {
    setAttributeInternal(DATESHIPPED, value);
  }

  /**
   * Gets the attribute value for SALES_REP_ID using the alias name SalesRepId.
   * @return the SALES_REP_ID
   */
  public Integer getSalesRepId()
  {
    return (Integer) getAttributeInternal(SALESREPID);
  }

  /**
   * Sets <code>value</code> as attribute value for SALES_REP_ID using the alias name SalesRepId.
   * @param value value to set the SALES_REP_ID
   */
  public void setSalesRepId(Integer value)
  {
    setAttributeInternal(SALESREPID, value);
  }

  /**
   * Gets the attribute value for TOTAL using the alias name Total.
   * @return the TOTAL
   */
  public BigDecimal getTotal()
  {
    return (BigDecimal) getAttributeInternal(TOTAL);
  }

  /**
   * Sets <code>value</code> as attribute value for TOTAL using the alias name Total.
   * @param value value to set the TOTAL
   */
  public void setTotal(BigDecimal value)
  {
    setAttributeInternal(TOTAL, value);
  }

  /**
   * Gets the attribute value for PAYMENT_TYPE using the alias name PaymentType.
   * @return the PAYMENT_TYPE
   */
  public String getPaymentType()
  {
    return (String) getAttributeInternal(PAYMENTTYPE);
  }

  /**
   * Sets <code>value</code> as attribute value for PAYMENT_TYPE using the alias name PaymentType.
   * @param value value to set the PAYMENT_TYPE
   */
  public void setPaymentType(String value)
  {
    setAttributeInternal(PAYMENTTYPE, value);
  }

  /**
   * Gets the attribute value for ORDER_FILLED using the alias name OrderFilled.
   * @return the ORDER_FILLED
   */
  public String getOrderFilled()
  {
    return (String) getAttributeInternal(ORDERFILLED);
  }

  /**
   * Sets <code>value</code> as attribute value for ORDER_FILLED using the alias name OrderFilled.
   * @param value value to set the ORDER_FILLED
   */
  public void setOrderFilled(String value)
  {
    setAttributeInternal(ORDERFILLED, value);
  }


  /**
   * Gets the associated <code>Row</code> using master-detail link SEmpView.
   */
  public Row getSEmpView()
  {
    return (Row) getAttributeInternal(SEMPVIEW);
  }

  /**
   * Sets the master-detail link SEmpView between this object and <code>value</code>.
   */
  public void setSEmpView(Row value)
  {
    setAttributeInternal(SEMPVIEW, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
