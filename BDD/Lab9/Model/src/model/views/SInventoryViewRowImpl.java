package model.views;

import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 08 14:02:22 EST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SInventoryViewRowImpl
  extends ViewRowImpl
{
  public static final int ENTITY_SINVENTORY = 0;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum
  {
    ProductId
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getProductId();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setProductId((Integer)value);
      }
    }
    ,
    WarehouseId
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getWarehouseId();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setWarehouseId((Integer)value);
      }
    }
    ,
    AmountInStock
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getAmountInStock();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setAmountInStock((Integer)value);
      }
    }
    ,
    ReorderPoint
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getReorderPoint();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setReorderPoint((Integer)value);
      }
    }
    ,
    MaxInStock
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getMaxInStock();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setMaxInStock((Integer)value);
      }
    }
    ,
    OutOfStockExplanation
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getOutOfStockExplanation();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setOutOfStockExplanation((String)value);
      }
    }
    ,
    RestockDate
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getRestockDate();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setRestockDate((Timestamp)value);
      }
    }
    ,
    quantiteDispo
    {
      public Object get(SInventoryViewRowImpl obj)
      {
        return obj.getquantiteDispo();
      }

      public void put(SInventoryViewRowImpl obj, Object value)
      {
        obj.setquantiteDispo((Integer)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(SInventoryViewRowImpl object);

    public abstract void put(SInventoryViewRowImpl object, Object value);

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int PRODUCTID = AttributesEnum.ProductId.index();
  public static final int WAREHOUSEID = AttributesEnum.WarehouseId.index();
  public static final int AMOUNTINSTOCK = AttributesEnum.AmountInStock.index();
  public static final int REORDERPOINT = AttributesEnum.ReorderPoint.index();
  public static final int MAXINSTOCK = AttributesEnum.MaxInStock.index();
  public static final int OUTOFSTOCKEXPLANATION = AttributesEnum.OutOfStockExplanation.index();
  public static final int RESTOCKDATE = AttributesEnum.RestockDate.index();
  public static final int QUANTITEDISPO = AttributesEnum.quantiteDispo.index();

  /**
   * This is the default constructor (do not remove).
   */
  public SInventoryViewRowImpl()
  {
  }

  /**
   * Gets SInventory entity object.
   * @return the SInventory
   */
  public EntityImpl getSInventory()
  {
    return (EntityImpl) getEntity(ENTITY_SINVENTORY);
  }

  /**
   * Gets the attribute value for PRODUCT_ID using the alias name ProductId.
   * @return the PRODUCT_ID
   */
  public Integer getProductId()
  {
    return (Integer) getAttributeInternal(PRODUCTID);
  }

  /**
   * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId.
   * @param value value to set the PRODUCT_ID
   */
  public void setProductId(Integer value)
  {
    setAttributeInternal(PRODUCTID, value);
  }

  /**
   * Gets the attribute value for WAREHOUSE_ID using the alias name WarehouseId.
   * @return the WAREHOUSE_ID
   */
  public Integer getWarehouseId()
  {
    return (Integer) getAttributeInternal(WAREHOUSEID);
  }

  /**
   * Sets <code>value</code> as attribute value for WAREHOUSE_ID using the alias name WarehouseId.
   * @param value value to set the WAREHOUSE_ID
   */
  public void setWarehouseId(Integer value)
  {
    setAttributeInternal(WAREHOUSEID, value);
  }

  /**
   * Gets the attribute value for AMOUNT_IN_STOCK using the alias name AmountInStock.
   * @return the AMOUNT_IN_STOCK
   */
  public Integer getAmountInStock()
  {
    calculQte();
    return (Integer) getAttributeInternal(AMOUNTINSTOCK);
  }

  /**
   * Sets <code>value</code> as attribute value for AMOUNT_IN_STOCK using the alias name AmountInStock.
   * @param value value to set the AMOUNT_IN_STOCK
   */
  public void setAmountInStock(Integer value)
  {
    calculQte();
    setAttributeInternal(AMOUNTINSTOCK, value);
  }

  /**
   * Gets the attribute value for REORDER_POINT using the alias name ReorderPoint.
   * @return the REORDER_POINT
   */
  public Integer getReorderPoint()
  {
    calculQte();
    return (Integer) getAttributeInternal(REORDERPOINT);
  }

  /**
   * Sets <code>value</code> as attribute value for REORDER_POINT using the alias name ReorderPoint.
   * @param value value to set the REORDER_POINT
   */
  public void setReorderPoint(Integer value)
  {
    calculQte();
    setAttributeInternal(REORDERPOINT, value);
  }

  /**
   * Gets the attribute value for MAX_IN_STOCK using the alias name MaxInStock.
   * @return the MAX_IN_STOCK
   */
  public Integer getMaxInStock()
  {
    return (Integer) getAttributeInternal(MAXINSTOCK);
  }

  /**
   * Sets <code>value</code> as attribute value for MAX_IN_STOCK using the alias name MaxInStock.
   * @param value value to set the MAX_IN_STOCK
   */
  public void setMaxInStock(Integer value)
  {
    setAttributeInternal(MAXINSTOCK, value);
  }

  /**
   * Gets the attribute value for OUT_OF_STOCK_EXPLANATION using the alias name OutOfStockExplanation.
   * @return the OUT_OF_STOCK_EXPLANATION
   */
  public String getOutOfStockExplanation()
  {
    return (String) getAttributeInternal(OUTOFSTOCKEXPLANATION);
  }

  /**
   * Sets <code>value</code> as attribute value for OUT_OF_STOCK_EXPLANATION using the alias name OutOfStockExplanation.
   * @param value value to set the OUT_OF_STOCK_EXPLANATION
   */
  public void setOutOfStockExplanation(String value)
  {
    setAttributeInternal(OUTOFSTOCKEXPLANATION, value);
  }

  /**
   * Gets the attribute value for RESTOCK_DATE using the alias name RestockDate.
   * @return the RESTOCK_DATE
   */
  public Timestamp getRestockDate()
  {
    return (Timestamp) getAttributeInternal(RESTOCKDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for RESTOCK_DATE using the alias name RestockDate.
   * @param value value to set the RESTOCK_DATE
   */
  public void setRestockDate(Timestamp value)
  {
    setAttributeInternal(RESTOCKDATE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute quantiteDispo.
   * @return the quantiteDispo
   */
  public Integer getquantiteDispo()
  {
    calculQte();
    return (Integer) getAttributeInternal(QUANTITEDISPO);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute quantiteDispo.
   * @param value value to set the  quantiteDispo
   */
  public void setquantiteDispo(Integer value)
  {
    calculQte();
    setAttributeInternal(QUANTITEDISPO, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
  
  private void calculQte()
  {
    QUANTITEDISPO = AMOUNTINSTOCK-REORDERPOINT;
  }
}
